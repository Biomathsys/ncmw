#!/usr/bin/env python

import hydra
from omegaconf import DictConfig, OmegaConf

import logging
import socket
import importlib

import time

import random
import numpy as np
import pandas as pd
from copy import deepcopy

import sys, os

file_dir = os.path.dirname(os.path.dirname(__file__))
sys.path.append(file_dir)

from subprocess import call


@hydra.main(config_path="../data/hydra", config_name="config.yaml")
def run(cfg: DictConfig) -> None:
    log = logging.getLogger(__name__)
    log.info(OmegaConf.to_yaml(cfg))
    log.info(f"Hostname: {socket.gethostname()}")

    seed = cfg.seed
    random.seed(seed)
    np.random.seed(seed)
    log.info(f"Random seed: {seed}")

    start_time = time.time()

    if cfg.run_setup:
        log.info("Running setup...")
        call("ncmw_setup")
    
    if cfg.run_analysis:
        log.info("Running analysis")
        call("ncmw_analysis")
    
    if cfg.run_community:
        log.info("Running community")
        call("ncmw_community")

    end_time = time.time()
    runtime = end_time - start_time
    log.info(f"Finished Workflow in {runtime} seconds")


if __name__ == "__main__":
    run()
